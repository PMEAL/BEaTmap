- - - CURRENT STATE - - -

dataio
	import numpy as np
	import pandas as pd
	import scipy as sp
	import matplotlib.pyplot as plt
	import bet
	
	def import_basic_data(file):
	return data, adsorbate

	def import_dvs_data(file):
	return data

	def data_quality(df):
	return

	def isotherm_type(df):
	return

	def export_raw_data(df, file_name):
	return

	def export_processed_data(df, sa, c, nm, lin_reg, file_name):
	return processed_data

bet
	import numpy as np
	import scipy as sp
	import util

	def bet(df, ads_xc):
	return sa_array, c_array, nm_array, err_array, lin_reg

	def single_point_bet(df, ads_xc):
	return sa_array, nm_array

	def theta(df, nm):
	return theta

	def check_1(df):
	return mask

	def check_2(lin_reg):
	return mask

	def check_3(df, nm):
	return mask

	def check_4(df, lin_reg, nm):
	return mask

	def check_4(df, lin_reg, nm):
	return mask

	def check_5(df, points=5):
	return mask

	def combine_masks(df, linreg, nm, points=5):
	return mask	

figures
	import numpy as np
	import scipy as sp
	import matplotlib.pyplot as plt
	import seaborn as sns
	import util

	def experimental_data_plot(df, file_name):
	return

	def experimental_data_1stderiv_plot(df, file_name):
	return

	def ssa_heatmap(df, sa, file_name):
	return

	def theta_heatmap(df, theta, file_name):
	return

	def err_heatmap(df, err, file_name):
	return

	def diff_heatmap(df, diff, file_name):
	return

	def bet_plot(c, err, df, file_name):
	return

	def bet_iso_combo_plot(c, err, sa, nm, df, file_name):
	return

tables
	from prettytable import PrettyTable
	import numpy as np
	import util

	def ascii_tables(c, sa, err, df):
	return

util
	import numpy as np
	
	def index_of_value(array, value):
	return idx

	def max_min(array):
	return maximum, max_idx, minimum, min_idx	
	
	def mean_ignore0(array):
	return mean

	def median_ignore0(array):
	return median

	def lin_interp(df, val):
	return interp_val

makefile
	to install required packages


- - - NOTES FROM https://docs.python-guide.org/writing/structure/ — - -

avoid circular dependencies (eg ‘bet’ needing to import ‘data’ which uses a function from ‘bet’) 

avoid overuse of global variables, especially if they’re changed on the fly by multiple functions

avoid spaghetti code (lots of nested ifs and for loops)

avoid ravioli code (similar pieces of logic, no proper structure)

keep module names short, all lowercase, avoid using special symbols (., _, etc)

- - - GENERAL FLOW - - -

import data (relp and n)
	check data quality
	plot experimental data
	return data as dataframe

pass dataframe to bet
	run bet
		user will need to specify area/molecule in angstrom^2 
	return complete array (sa, nm, c, lin interp results)
	make masks
		let user pick masks and min points
	apply masks, return masked array

pass masked array to figures
	plot sa heatmap
		save as .png
		let users choose colour mapping?
	plot error heatmap?
		save as .png
	plot iso combo plot?
		save as .png

pass masked array to tables
	output summary table, ascii formatted
		export as text file?
		export as csv/xls?

export full processed data as csv/xls
export raw processed data as csv/xls
export raw dataframe as csv/xls

- - - TO DO - - - 



x make mask names unique x

x handle execption where mask = 0 (also on a per check basis?) x
	x probably easiest to just check if arrays == zeros for each function that 	uses masked data sets x

x if all ranges fail for checks, issues in combo mask function (currently not returning anything so muliplcation breaks in combo mast function) x

x update data for new simple data import x

x get common ao value x 

x fix bet_plot, rename to bet_combo_plot, make y axis scales either both labelled or equal x

x try and except on data import name x

x make heatmap coloring user defined x

x iso combo plot draw a "n/nm = 1" line x 

x test with all datasets possible x

x retest with all datasets possible x

x rework check4 - see check 4 errors x

x check bet_combo_plot leged issues x

x add exception for combo plots when only one valid relative pressure range - unnecessary, just prints twice x 
 
x fix bet_combo_plot max error plot occasionally empty x

clean up current functions

follow pep8
 
final polish
	newline on text
	abilty to investigate checks? processed data export?
	check figure design


